/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.41).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.eduit.app.springboot.api;

import com.eduit.app.springboot.model.UserListDTO;
import com.eduit.app.springboot.model.UserRequestDTO;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2023-03-21T20:52:22.931324395Z[GMT]")
@Validated
public interface UsersApi {

    @Operation(summary = "Create user", description = "Create a user, authentication required.", security = {
        @SecurityRequirement(name = "bearerAuth")    }, tags={ "user" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "successful operation", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ResponseContainerResponseDTO.class))),
        
        @ApiResponse(responseCode = "401", description = "Access token is missing or invalid") })
    @RequestMapping(value = "/users/user",
        produces = { "application/json" }, 
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<ResponseContainerResponseDTO> createUser(@Parameter(in = ParameterIn.DEFAULT, description = "Created user object", schema=@Schema()) @Valid @RequestBody UserRequestDTO body);


    @Operation(summary = "Retrieve a list of users", description = "Retrieve a list of users, authentication required.", security = {
        @SecurityRequirement(name = "bearerAuth")    }, tags={ "user" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "successful operation", content = @Content(mediaType = "application/json", schema = @Schema(implementation = UserListDTO.class))) })
    @RequestMapping(value = "/users/user",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<UserListDTO> retrieveAllUsers();

}

